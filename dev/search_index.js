var documenterSearchIndex = {"docs":
[{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"To quickly get you started with Hephaestus.jl, let us recreate a simple example of a cantilever beam subjected to a concentrated load at its free end as shown below.","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"using Hephaestus","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"To create a new model, use the Model() constructor:","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"M = Model()","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"To add nodes to the model, use the add_node!() function:","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"add_node!(M, 1 , 0  * 12, 0, 0)\nadd_node!(M, 2 , 1  * 12, 0, 0)\nadd_node!(M, 3 , 2  * 12, 0, 0)\nadd_node!(M, 4 , 3  * 12, 0, 0)\nadd_node!(M, 5 , 4  * 12, 0, 0)\nadd_node!(M, 6 , 5  * 12, 0, 0)\nadd_node!(M, 7 , 6  * 12, 0, 0)\nadd_node!(M, 8 , 7  * 12, 0, 0)\nadd_node!(M, 9 , 8  * 12, 0, 0)\nadd_node!(M, 10, 9  * 12, 0, 0)\nadd_node!(M, 11, 10 * 12, 0, 0)","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"To add materials to the model, use the add_material!() function:","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"add_material!(M, 1, 29000, 0.3, 0.000290)","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"To add sections to the model, use the add_section!() function:","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"add_section!(M, 1, 9.16, 180, 180, 359)","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"To add elements to the model, use the add_element!() function:","category":"page"},{"location":"QuickStart/","page":"Quick Start","title":"Quick Start","text":"add_element!(M, 1 , 1 , 2 , 1, 1)\nadd_element!(M, 2 , 2 , 3 , 1, 1)\nadd_element!(M, 3 , 3 , 4 , 1, 1)\nadd_element!(M, 4 , 4 , 5 , 1, 1)\nadd_element!(M, 5 , 5 , 6 , 1, 1)\nadd_element!(M, 6 , 6 , 7 , 1, 1)\nadd_element!(M, 7 , 7 , 8 , 1, 1)\nadd_element!(M, 8 , 8 , 9 , 1, 1)\nadd_element!(M, 9 , 9 , 10, 1, 1)\nadd_element!(M, 10, 10, 11, 1, 1)","category":"page"},{"location":"","page":"Home","title":"Home","text":"<img src = \"./assets/social-preview.svg\"/>","category":"page"},{"location":"#Description","page":"Home","title":"Description","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Hephaestus.jl is an auto-differentiable structural analysis package purely written in the Julia programming language.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install Hephaestus.jl package, type ] in Julia REPL to enter the built-in Julia package manager and execute the following command:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add Hephaestus","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Hephaestus.jl package is distributed under the MIT license. More information can be found in the LICENSE.md file.","category":"page"},{"location":"#Help-and-Support","page":"Home","title":"Help and Support","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For assistance with the package, please raise an issue on the GitHub Issues page. Please use the appropriate labels to indicate the specific functionality you are inquiring about. Alternatively, contact the author directly at AkchurinDA@gmail.com.","category":"page"},{"location":"#Acknowledgements","page":"Home","title":"Acknowledgements","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The design of the package is inspired by OpenSeesPy, PyNite, and MASTAN2.","category":"page"},{"location":"API/#Types","page":"API","title":"Types","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Model\nNode\nMaterial\nSection\nElement","category":"page"},{"location":"API/#Hephaestus.Model","page":"API","title":"Hephaestus.Model","text":"struct Model\n\nA type that represents the finite element model of a structure.\n\nTo create a new model, use the Model() constructor.\n\nFields\n\nnodes: Dictionary of nodes in the model.\nmaterials: Dictionary of materials in the model.\nsections: Dictionary of sections in the model.\nelements: Dictionary of elements in the model.\nsupports: Dictionary of supports in the model.\nconcentrated_loads: Dictionary of concentrated loads (acting on nodes) in the model.\ndistributed_loads: Dictionary of distributed loads (acting on elements) in the model.\np_l: Dictionary of element fixed-end forces in the element's local coordinate system.\np_g: Dictionary of element fixed-end forces in the global coordinate system.\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.Node","page":"API","title":"Hephaestus.Node","text":"struct Node\n\nA type that represents a node in the finite element model of a structure.\n\nThis type should never be called directly by the user.\n\nFields\n\nID: Unique identifier of the node provided by the user\nx: x-coordinate of the node\ny: y-coordinate of the node\nz: z-coordinate of the node\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.Material","page":"API","title":"Hephaestus.Material","text":"struct Material\n\nA type that represents a material in the finite element model of a structure.\n\nThis type should never be called directly by the user.\n\nFields\n\nID: Unique identifier of the material provided by the user\nE: Young's modulus of the material, E\nν: Poisson's ratio of the material, nu\nρ: Density of the material, rho\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.Section","page":"API","title":"Hephaestus.Section","text":"struct Section\n\nA type that represents a section in the finite element model of a structure.\n\nThis type should never be called directly by the user.\n\nFields\n\nID: Unique identifier of the section provided by the user\nA: Cross-sectional area of the section, A\nI_zz: Moment of inertia about the local z-axis of the section, I_zz\nI_yy: Moment of inertia about the local y-axis of the section, I_yy\nJ: Polar moment of inertia of the section, J\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.Element","page":"API","title":"Hephaestus.Element","text":"struct Element\n\nA type that represents an element in the finite element model of a structure.\n\nThis type should never be called directly by the user.\n\nFields\n\nID: Unique identifier of the element provided by the user\nnode_i_ID: Unique identifier of the node i of the element provided by the user\nnode_j_ID: Unique identifier of the node j of the element provided by the user\nmaterial_ID: Unique identifier of the material of the element provided by the user\nsection_ID: Unique identifier of the section of the element provided by the user\nx_i: x-coordinate of the node i of the element, x_i\ny_i: y-coordinate of the node i of the element, y_i\nz_i: z-coordinate of the node i of the element, z_i\nx_j: x-coordinate of the node j of the element, x_j\ny_j: y-coordinate of the node j of the element, y_j\nz_j: z-coordinate of the node j of the element, z_j\nE: Young's modulus of the material of the element, E\nν: Poisson's ratio of the material of the element, nu\nρ: Density of the material of the element, rho\nA: Cross-sectional area of the section of the element, A\nI_zz: Moment of inertia about the local z-axis of the section of the element, I_zz\nI_yy: Moment of inertia about the local y-axis of the section of the element, I_yy\nJ: Polar moment of inertia of the section of the element, J\nω: Angle that defines the orientation of the local coordinate system of the element, omega\nreleases_i: DOF releases at the node i of the element\nreleases_j: DOF releases at the node j of the element\nL: Length of the element, L\nγ: Global-to-local sub-transformation matrix of the element, gamma\nT: Global-to-local transformation matrix of the element, T\nk_e_l: Element's elastic stiffness matrix in its local coordinate system, k_e l\nk_g_l: Element's geometric stiffness matrix in its local coordinate system, k_g l\nk_e_g: Element's elastic stiffness matrix in its global coordinate system, k_e g\nk_g_g: Element's geometric stiffness matrix in its global coordinate system, k_g g\n\n\n\n\n\n","category":"type"},{"location":"API/#Functions","page":"API","title":"Functions","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"add_node!\nadd_material!\nadd_section!\nadd_element!\nadd_support!\nadd_concentrated_load!\nadd_distributed_load!","category":"page"},{"location":"API/#Hephaestus.add_node!","page":"API","title":"Hephaestus.add_node!","text":"add_node!(model, ID, x, y, z)\n\nThis function adds a node to the model.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.add_material!","page":"API","title":"Hephaestus.add_material!","text":"add_material!(model, ID, E, ν, ρ)\n\nThis function adds a material to the model.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.add_section!","page":"API","title":"Hephaestus.add_section!","text":"add_section!(model, ID, A, I_zz, I_yy, J)\n\nThis function adds a section to the model.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.add_element!","page":"API","title":"Hephaestus.add_element!","text":"add_element!(model, ID, node_i_ID, node_j_ID, material_ID, section_ID; \n    ω = 0,\n    releases_i = [false, false, false, false, false, false],\n    releases_j = [false, false, false, false, false, false])\n\nThis function adds an element to the model.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.add_support!","page":"API","title":"Hephaestus.add_support!","text":"add_support!(model, ID, u_x, u_y, u_z, θ_x, θ_y, θ_z)\n\nThis function adds a support to the model.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.add_concentrated_load!","page":"API","title":"Hephaestus.add_concentrated_load!","text":"add_concentrated_load!(model, ID, F_x, F_y, F_z, M_x, M_y, M_z)\n\nThis function adds a concentrated load to the model.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.add_distributed_load!","page":"API","title":"Hephaestus.add_distributed_load!","text":"add_distributed_load!(model, ID, w_x, w_y, w_z;\n    cs = :local)\n\nThis function adds a distributed load to the model.\n\nArguments\n\nmodel::Model: The finite element model of a structure.\nID::Int:      The ID of the element on which the distributed load is applied.\nw_x::Real:    The distributed load in the positive x-direction.\nw_y::Real:    The distributed load in the positive y-direction.\nw_z::Real:    The distributed load in the positive z-direction.\ncs::Symbol:   The coordinate system in which the distributed loads are provided. It can be either :local or :global.\n\n\n\n\n\n","category":"function"}]
}

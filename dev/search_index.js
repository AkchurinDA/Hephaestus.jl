var documenterSearchIndex = {"docs":
[{"location":"#Description","page":"Home","title":"Description","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Hephaestus.jl is an automatically differentiable structural analysis package purely written in the Julia programming language.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install Hephaestus.jl package, type ] in Julia REPL to enter the built-in Julia package manager and execute the following command:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add Hephaestus","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Hephaestus.jl package is distributed under the MIT license. More information can be found in the LICENSE.md file.","category":"page"},{"location":"#Help-and-Support","page":"Home","title":"Help and Support","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For assistance with the package, please raise an issue on the GitHub Issues page. Please use the appropriate labels to indicate the specific functionality you are inquiring about. Alternatively, contact the author directly at AkchurinDA@gmail.com.","category":"page"},{"location":"#Acknowledgements","page":"Home","title":"Acknowledgements","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The internal design of the package is inspired by OpenSeesPy, PyNite, and MASTAN2.","category":"page"},{"location":"API/#API","page":"API","title":"API","text":"","category":"section"},{"location":"API/#Types-Used-to-Define-a-Model","page":"API","title":"Types Used to Define a Model","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Model\nNode\nMaterial\nSection\nElement","category":"page"},{"location":"API/#Hephaestus.Model","page":"API","title":"Hephaestus.Model","text":"struct Model\n\nA type representing the finite element model of a structure of interest.\n\nname: Name of the model\nnodes: Nodes of the model\nsections: Sections of the model\nmaterials: Materials of the model\nelements: Elements of the model\nconcloads: Concentrated loads of the model\ndistloads: Distribution loads of the model\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.Node","page":"API","title":"Hephaestus.Node","text":"struct Node\n\nA type representing a node in a finite element model.\n\nID: Identification tag\nx: x-coordinate\ny: y-coordinate\nz: z-coordinate\nu_x: Is the node restrained agaist translation in the global x-direction?\nu_y: Is the node restrained agaist translation in the global y-direction?\nu_z: Is the node restrained agaist translation in the global z-direction?\nθ_x: Is the node restrained agaist rotation about the global x-axis?\nθ_y: Is the node restrained agaist rotation about the global y-axis?\nθ_z: Is the node restrained agaist rotation about the global z-axis?\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.Material","page":"API","title":"Hephaestus.Material","text":"struct Material\n\nA type representing a material in a finite element model.\n\nID: Identification tag\nE: Young's modulus, E\nν: Poisson's ratio, nu\nρ: Density, ρ\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.Section","page":"API","title":"Hephaestus.Section","text":"struct Section\n\nA type representing a section in a finite element model.\n\nID: Identification tag\nA: Cross-sectional area, A\nI_zz: Moment of inertia about the local z-axis, I_zz\nI_yy: Moment of inertia about the local y-axis, I_yy\nJ: Torsional constant, J\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.Element","page":"API","title":"Hephaestus.Element","text":"struct Element\n\nA type representing an element in the finite element model.\n\nID: Identification tag\nnode_i: Node (i)\nnode_j: Node (j)\nsection: Section\nmaterial: Material\nω: Orientation angle, omega\nreleases_i: End releases at node (i)\nreleases_j: End releases at node (j)\nL: Element length, L\nγ: Subtransformation matrix, gamma\nΓ: Transformation matrix, Gamma\nk_e_l: Elastic stiffness matrix in the local coordinate system, k_el\nk_e_g: Elastic stiffness matrix in the global coordinate system, k_eg\nk_g_l: Geometric stiffness matrix in the local coordinate system, k_gl\nk_g_g: Geometric stiffness matrix in the global coordinate system, k_gg\nm_l: Mass matrix in the local coordinate system, m_l\nm_g: Mass matrix in the global coordinate system, m_g\n\n\n\n\n\n","category":"type"},{"location":"API/#Types-Used-to-Perform-Analyses-of-Different-Types-and-Store-the-Results","page":"API","title":"Types Used to Perform Analyses of Different Types and Store the Results","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"LinearElasticAnalysis\nLinearElasticAnalysisCache\nElasticBucklingAnalysis\nElasticBucklingAnalysisCache\nFreeVibrationAnalysis\nFreeVibrationAnalysisCache","category":"page"},{"location":"API/#Hephaestus.LinearElasticAnalysis","page":"API","title":"Hephaestus.LinearElasticAnalysis","text":"struct LinearElasticAnalysis\n\nA type representing the (geometrically) linear (materially) elastic analysis.\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.LinearElasticAnalysisCache","page":"API","title":"Hephaestus.LinearElasticAnalysisCache","text":"struct LinearElasticAnalysisCache\n\nA type used to store the results of linear elastic analysis.\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.ElasticBucklingAnalysis","page":"API","title":"Hephaestus.ElasticBucklingAnalysis","text":"struct ElasticBucklingAnalysis\n\nA type representing the elastic buckling analysis.\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.ElasticBucklingAnalysisCache","page":"API","title":"Hephaestus.ElasticBucklingAnalysisCache","text":"struct ElasticBucklingAnalysisCache\n\nA type used to store the results of elastic buckling analysis.\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.FreeVibrationAnalysis","page":"API","title":"Hephaestus.FreeVibrationAnalysis","text":"struct LinearElasticAnalysis\n\nA type representing the free vibration analysis.\n\n\n\n\n\n","category":"type"},{"location":"API/#Hephaestus.FreeVibrationAnalysisCache","page":"API","title":"Hephaestus.FreeVibrationAnalysisCache","text":"struct LinearElasticAnalysisCache\n\nA type used to store the results of free vibration analysis.\n\n\n\n\n\n","category":"type"},{"location":"API/#Functions-Used-to-Define-a-Model","page":"API","title":"Functions Used to Define a Model","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"node!\nsection!\nmaterial!\nelement!\nconcload!\ndistload!","category":"page"},{"location":"API/#Hephaestus.node!","page":"API","title":"Hephaestus.node!","text":"node!(model, ID, \n    x, y, z;\n    u_x = false, u_y = false, u_z = false,\n    θ_x = false, θ_y = false, θ_z = false)\n\nAdd a node to a finite element model.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.section!","page":"API","title":"Hephaestus.section!","text":"section!(model, ID, \n    A, I_zz, I_yy, J)\n\nAdd a section to a finite element model.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.material!","page":"API","title":"Hephaestus.material!","text":"material!(model, ID, \n    E, ν, ρ)\n\nAdd a material to a finite element model.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.element!","page":"API","title":"Hephaestus.element!","text":"element!(model, ID, \n    node_i_ID, node_j_ID, \n    section_ID, \n    material_ID; \n    ω = 0,\n    releases_i = [false, false, false, false, false, false],\n    releases_j = [false, false, false, false, false, false])\n\nAdd an element to a finite element model.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.concload!","page":"API","title":"Hephaestus.concload!","text":"concload!(model, ID, \n    F_x, F_y, F_z, \n    M_x, M_y, M_z)\n\nApplies a concentrated load to a node with a specified ID.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.distload!","page":"API","title":"Hephaestus.distload!","text":"distload!(model, ID, \n    w_x, w_y, w_z; \n    cs = :local)\n\nApplies a distributed load to an element with a specified ID.\n\n\n\n\n\n","category":"function"},{"location":"API/#Functions-Used-to-Perform-Analyses-of-Different-Types-and-Extract-the-Results","page":"API","title":"Functions Used to Perform Analyses of Different Types and Extract the Results","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"solve\ngetnodedisp\ngetelementdisp_l\ngetelementdisp_g\ngetelementforces_l\ngetelementforces_g","category":"page"},{"location":"API/#Hephaestus.solve","page":"API","title":"Hephaestus.solve","text":"solve(model::Model, analysistype::AbstractAnalysisType)\n\nSolve the model using the specified analysis type.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.getnodedisp","page":"API","title":"Hephaestus.getnodedisp","text":"getnodedisp(model::Model, solution::AbstractSolutionCache, ID::Int)\n\nExtracts the displacement vector of a node of interest from the solution cache.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.getelementdisp_l","page":"API","title":"Hephaestus.getelementdisp_l","text":"getelementdisp_l(model::Model, solution::AbstractSolutionCache, ID::Int)\n\nExtracts the displacement vector of an element of interest in the local coordinate system from the solution cache.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.getelementdisp_g","page":"API","title":"Hephaestus.getelementdisp_g","text":"getelementdisp_g(model::Model, solution::AbstractSolutionCache, ID::Int)\n\nExtracts the displacement vector of an element of interest in the global coordinate system from the solution cache.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.getelementforces_l","page":"API","title":"Hephaestus.getelementforces_l","text":"getelementforces_l(model::Model, solution::AbstractSolutionCache, ID::Int)\n\nExtracts the internal forces of an element of interest in the local coordinate system from the solution cache.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.getelementforces_g","page":"API","title":"Hephaestus.getelementforces_g","text":"getelementforces_g(model::Model, solution::AbstractSolutionCache, ID::Int)\n\nExtracts the internal forces of an element of interest in the global coordinate system from the solution cache.\n\n\n\n\n\n","category":"function"},{"location":"API/#Functions-Used-to-Plot-a-Model-and-the-Results-of-Analyses-of-Different-Types","page":"API","title":"Functions Used to Plot a Model and the Results of Analyses of Different Types","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"plotmodel\nplotmodel!","category":"page"},{"location":"API/#Hephaestus.plotmodel","page":"API","title":"Hephaestus.plotmodel","text":"plotmodel(model::Model, [options])\n\nPlots a model of a structure of interest (Model) into a new Makie.jl scene.\n\n\n\n\n\n","category":"function"},{"location":"API/#Hephaestus.plotmodel!","page":"API","title":"Hephaestus.plotmodel!","text":"plotmodel!(scene::Scene, model::Model, [options])\n\nPlots a model of a structure of interest (Model) into an existing Makie.jl scene.\n\n\n\n\n\n","category":"function"}]
}
